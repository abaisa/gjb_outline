<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gjb151b.outline.outlineDao.OutlineUserInfoMapper">
  <resultMap id="BaseResultMap" type="cn.gjb151b.outline.model.OutlineUserInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_level" jdbcType="INTEGER" property="userLevel" />
    <result column="user_create_time" jdbcType="TIMESTAMP" property="userCreateTime" />
    <result column="user_update_time" jdbcType="TIMESTAMP" property="userUpdateTime" />
    <result column="user_new" jdbcType="LONGVARCHAR" property="userNew" />
    <result column="user_proofread" jdbcType="LONGVARCHAR" property="userProofread" />
    <result column="user_audit" jdbcType="LONGVARCHAR" property="userAudit" />
    <result column="user_authorize" jdbcType="LONGVARCHAR" property="userAuthorize" />
    <result column="user_remark" jdbcType="LONGVARCHAR" property="userRemark" />
  </resultMap>


  <select id="selectUserByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from outline_user_info where user_name=#{userName};
  </select>

  <select id="findAllUser"  resultMap="BaseResultMap">
    select * from outline_user_info ;
  </select>

  <update id="updateCol" statementType="STATEMENT">
		UPDATE outline_user_info SET ${colName}= '${data}' WHERE user_id = ${userId};
  </update>

  <update id="updateUser" statementType="STATEMENT">
		UPDATE outline_user_info SET ${colName}= '${data}' WHERE user_id = ${userId};
  </update>


  <select id="selectUserById" parameterType="int" resultMap="BaseResultMap">
    select user_name from outline_user_info where user_id=#{userId};
  </select>

  <delete id="deleteUserById" parameterType="int">
    delete from outline_user_info where user_id=#{userId};
  </delete>

  <insert id="addUser" parameterType="cn.gjb151b.outline.model.OutlineUserInfo" useGeneratedKeys="true">
    insert into outline_user_info(user_name, user_password, user_level, user_new, user_proofread, user_audit, user_authorize, user_remark)
    values(#{userName}, #{userPassword}, #{userLevel}, #{userNew}, #{userProofread}, #{userAudit}, #{userAuthorize}, #{userRemark});
  </insert>

  <select id="selectNewItemOperator" statementType="STATEMENT"  resultType="String">
        SELECT user_name FROM outline_user_info WHERE user_new like '%${outlineDevItemId}%';
  </select>

  <select id="selectProofreadItemOperator" statementType="STATEMENT"  resultType="String">
        SELECT user_name FROM outline_user_info WHERE user_proofread like '%${outlineDevItemId}%';
  </select>

  <select id="selectAuditItemOperator" statementType="STATEMENT"  resultType="String">
        SELECT user_name FROM outline_user_info WHERE user_audit like '%${outlineDevItemId}%';
  </select>

  <select id="selectAuthorizeItemOperator" statementType="STATEMENT"  resultType="String">
        SELECT user_name FROM outline_user_info WHERE user_authorize like '%${outlineDevItemId}%';
  </select>

  <update id="updateColByName" statementType="STATEMENT">
    update outline_user_info set ${colName} = '${data}' where user_name = '${userName}';
  </update>

  <!--<update id="updateUserNewItem" statementType="STATEMENT">-->
    <!--update outline_user_info set user_new = replace(user_new, '${devItemId}', '');-->
  <!--</update>-->

  <!--<update id="updateUserProofreadItem" statementType="STATEMENT">-->
    <!--update outline_user_info set user_proofread = replace(user_proofread, '${devItemId}', '');-->
  <!--</update>-->

  <!--<update id="updateUserAuditItem" statementType="STATEMENT">-->
    <!--update outline_user_info set user_audit = replace(user_audit, '${devItemId}', '');-->
  <!--</update>-->

  <!--<update id="updateUserAuthorizeItem" statementType="STATEMENT">-->
    <!--update outline_user_info set user_authorize = replace(user_authorize, '${devItemId}', '');-->
  <!--</update>-->

  <!--<update id="addUserItem" statementType="STATEMENT">-->
    <!--update outline_user_info set ${colName1} = replace(${colName2}, ${data1},${data2}) where user_name = ${userName}-->
  <!--</update>-->

  <!--<update id="addUserProofreadItem" statementType="STATEMENT">-->
    <!--update outline_user_info set user_proofread = concat(user_proofread, '${devItemId}') where user_name = ${userName}-->
  <!--</update>-->

  <!--<update id="addUserAuditItem" statementType="STATEMENT">-->
    <!--update outline_user_info set user_audit = concat(user_audit, '${devItemId}') where user_name = ${userName}-->
  <!--</update>-->

  <!--<update id="addUserAuthorizeItem" statementType="STATEMENT">-->
    <!--update outline_user_info set user_authorize = concat(user_authorize, '${devItemId}') where user_name = ${userName}-->
  <!--</update>-->




  <select id="selectAuthorizeItemOperator" statementType="STATEMENT"  resultType="List">
        SELECT user_name FROM outline_user_info WHERE user_authorize like '${outlineDevItemId}';
  </select>



</mapper>